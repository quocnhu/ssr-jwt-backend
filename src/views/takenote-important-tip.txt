<!-- <div class="container">
      <h3 class="mt-3">UPDATE USER</h3>
      <form
        class="border border-primary p-4"
        method="POST"
        action="/handleUpdateUser"
      >
        <div class="mb-3 mt-3 col-6">
          <label for="email" class="form-label">Email address</label>
          <input
            value="<%=userUpdateUnique.email%>"
            type="email"
            class="form-control"
            id="email"
            aria-describedby="emailHelp"
            name="email"
            required
          />
        </div>
        <div class="mb-3 col-6">
          <label for="username" class="form-label">Username</label>
          <input
            value="<%=userUpdateUnique.username%>"
            type="text"
            class="form-control"
            id="username"
            name="username"
            required
          />
        </div>
        <input hidden name="id" value="<%=userUpdateUnique.id%>" />

        <button type="submit" class="btn btn-primary">UPDATE</button>
      </form>
    </div> -->
    ============================

check user: user can not delete itself & need to have permission
  nodejs can not get id 
  react just write function to handle that problem

  ===========================
  sequelize: order also impacts on migration


  ================================

      //create new user
    await db.User.create({
      email: data.email,
      phone: data.phone,
      username: data.username,
      password: hashedPassword,
      address: data.address,
    });

    ===> await db.User.create({
      ...data, password: hashedPassword
    })

    inherent.

    //Update user
     if(user) {
      await user.update({
        username: data.username,
        address: data.address,
        sex: data.sex,
        groupId: data.groupId
      })} ===> because of "disable" attribute ==> so we must tighten essential items, to avoid hacker disables it 
========Authentication========
by: JWT and cookie-parser

==============================
 "development": {
    "username": "root",
    "password": "p@ssw0rdN",
    "database": "jwt",
    "host": "localhost",
    "dialect": "mysql",
    "logging": false,  // show query in database or not 
    "port": 3308
  },
==============================
by default brower blocks token ==> we need to set credential for it right on axios server for this project 


PORT_SERVER = 1995;
REACT_URL = http://localhost:3000
JWT_SECRET = nguyenquocnhuit